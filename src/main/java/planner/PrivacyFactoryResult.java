package planner;

import sql.PrivacyException;

import java.util.List;
import java.util.Properties;

/**
 * Holds the parts generated by {@link PrivacyFactory#create(Properties)}
 */
public class PrivacyFactoryResult {
    public final List<DataSourceSchema> dataSourceSchemas;
    public final MetadataSchema metadataSchema;
    public final DataSourceSchema defaultSchema;

    public PrivacyFactoryResult(List<DataSourceSchema> dataSourceSchemas, MetadataSchema
            metadataSchema, DataSourceSchema defaultSchema) throws PrivacyException {
        if (!dataSourceSchemas.isEmpty() && defaultSchema == null) {
            throw new PrivacyException("Default Schema is required");
        }
        this.dataSourceSchemas = dataSourceSchemas;
        this.defaultSchema = defaultSchema;
        if (metadataSchema != null) {
            this.metadataSchema = metadataSchema;
        } else {
            this.metadataSchema = MetadataSchema.empty();
        }
    }
}
